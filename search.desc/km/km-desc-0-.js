searchState.loadedDescShard("km", 0, "Returns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nClear all logs\nShow current configuration\nDiagnostic commands for troubleshooting\nInitialize configuration with API key\nDisplay the current JWT token from keyring\nAnalyze log files\nMonitor and proxy MCP requests\nConfig file path\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nVerbose mode (-v, -vv, -vvv)\nAPI key for Kilometers.ai (or set KM_API_KEY env var)\nAPI base URL\nCommand and arguments to proxy (everything after â€“)\nLog file to analyze\nAlso clear config file\nNumber of lines to show (default: all)\nSkip risk analysis filters (local logging only)\nLog file for MCP traffic\nFilter by method name\nOverride user tier for testing\nShow only requests\nShow only responses\nShow API key (hidden by default)\nTail mode - follow log file\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")