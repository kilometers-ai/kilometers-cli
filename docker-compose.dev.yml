services:
  # PostgreSQL database - matches API configuration exactly
  postgres:
    image: postgres:15-alpine
    container_name: kilometers-dev-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: kilometers_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      # Mount the API's database initialization script
      - ../kilometers-api/scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d kilometers_dev"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - kilometers-dev-network

  # Kilometers API - built from relative API repository
  api:
    build:
      context: ../kilometers-api
      dockerfile: Dockerfile
    container_name: kilometers-dev-api
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      # Override connection string to use postgres service
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=kilometers_dev;Username=postgres;Password=postgres;Port=5432;Include Error Detail=true
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5000
      # Development-friendly settings
      - Database__UseManagedIdentity=false
      - CORS__EnableDebugMode=true
      - CORS__AllowAnyOriginInDebug=true
      - Logging__LogLevel__Default=Information
      - Logging__LogLevel__Microsoft.EntityFrameworkCore=Information
      # Use development JWT settings (insecure for dev only)
      - Jwt__SecretKey=iEdqjaopf1F5Yp/yg2Hvj1hFfsUut7TNVzUZyBlu9Ho=
      - Jwt__Issuer=kilometers.ai
      - Jwt__Audience=kilometers.ai
      - Jwt__LifetimeHours=720
      - Jwt__AccessTokenLifetimeMinutes=15
      - Jwt__RefreshTokenLifetimeDays=30
    ports:
      - "5000:5000"
    networks:
      - kilometers-dev-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5000/health || exit 1"]
      interval: 30s
      timeout: 10s
      start_period: 60s
      retries: 3
    # Optional: Mount API source for live development (if needed)
    # volumes:
    #   - ../kilometers-api/src:/app/src:ro

  # Optional: pgAdmin for database management during development
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: kilometers-dev-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: dev@kilometers.ai
      PGADMIN_DEFAULT_PASSWORD: devpassword
    ports:
      - "5050:80"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - pgadmin_dev_data:/var/lib/pgadmin
    networks:
      - kilometers-dev-network
    profiles:
      - tools

volumes:
  postgres_dev_data:
    driver: local
  pgadmin_dev_data:
    driver: local

networks:
  kilometers-dev-network:
    name: kilometers-dev-network
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16
